package javaTypes.tests;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest4;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import typeSystem.runtime.OperationAspect;
import org.jetbrains.mps.openapi.model.SNode;
import typeSystem.runtime.TypeStore;
import typeSystem.runtime.TypeStoreImpl;
import typeSystem.runtime.TypingOptions;
import typeSystem.runtime.TypingRulesPool;
import typeSystem.runtime.TypingRuleContext;
import jetbrains.mps.lang.pattern.util.MatchingUtil;

@MPSLaunch
public class Conversions_Test extends BaseTransformationTest4 {
  @Test
  public void test_test() throws Throwable {
    this.initTest("C:/hsTypes", "r:6b1a5323-2ab1-47c2-9c06-0c788821d541(javaTypes.tests@tests)");
    this.runTest("javaTypes.tests.Conversions_Test$TestBody", "test_test", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_test() throws Exception {
      new ConversionsClass_Test().test();
    }

    public void testConversion(OperationAspect<? extends SNode> aspect, Iterable<SNode> arguments, SNode result) {
      final TypeStore typeStore = new TypeStoreImpl(new TypingOptions());
      SNode conversion = TypingRulesPool.getInstance().findAndExecute(aspect, arguments, new TypingRuleContext() {
        public TypeStore getTypeStore() {
          return typeStore;
        }
      });
      assert MatchingUtil.matchNodes(conversion, result);
    }
  }
}
